
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA DOLLAR DQUOTE ID INTEGER LPAREN PERCENT RPAREN TYPEline : label COLONlabel : IDline : instrinstr : IDinstr : ID opinstr : ID op COMMA opinstr : ID op COMMA op COMMA opop : immediate\n    | register\n    | address\n    immediate : DOLLAR INTEGER\n    | label\n    register : PERCENT IDaddress : immediateaddress : address_offset LPAREN register address_index address_scale RPARENempty :address_offset : empty\n    | label\n    address_offset : INTEGERaddress_index : empty\n    | COMMA register\n    address_scale : empty\n    | COMMA INTEGER\n    address : immediate LPAREN register RPARENline : globalglobal : TYPE global_valueglobal_value : INTEGERglobal_value : labelglobal_value : DQUOTE ID DQUOTE'
    
_lr_action_items = {'ID':([0,5,6,16,22,23,33,],[5,8,8,26,28,8,8,]),'TYPE':([0,],[6,]),'$end':([1,3,4,5,7,8,9,10,11,12,15,19,20,21,25,26,29,32,34,38,43,],[0,-3,-25,-4,-1,-2,-5,-8,-9,-10,-12,-26,-27,-28,-11,-13,-6,-29,-24,-7,-15,]),'COLON':([2,5,],[7,-2,]),'DOLLAR':([5,23,33,],[13,13,13,]),'PERCENT':([5,23,24,27,33,37,],[16,16,16,16,16,16,]),'INTEGER':([5,6,13,23,33,41,],[14,20,25,14,14,44,]),'LPAREN':([5,8,10,14,15,17,18,23,25,33,],[-16,-2,24,-19,-12,27,-17,-16,-11,-16,]),'DQUOTE':([6,28,],[22,32,]),'COMMA':([8,9,10,11,12,15,25,26,29,31,34,35,36,42,43,],[-2,23,-8,-9,-10,-12,-11,-13,33,37,-24,41,-20,-21,-15,]),'RPAREN':([26,30,31,35,36,39,40,42,44,],[-13,34,-16,-16,-20,43,-22,-21,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,],[1,]),'label':([0,5,6,23,33,],[2,15,21,15,15,]),'instr':([0,],[3,]),'global':([0,],[4,]),'op':([5,23,33,],[9,29,38,]),'immediate':([5,23,33,],[10,10,10,]),'register':([5,23,24,27,33,37,],[11,11,30,31,11,42,]),'address':([5,23,33,],[12,12,12,]),'address_offset':([5,23,33,],[17,17,17,]),'empty':([5,23,31,33,35,],[18,18,36,18,40,]),'global_value':([6,],[19,]),'address_index':([31,],[35,]),'address_scale':([35,],[39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> label COLON','line',2,'p_line_1','x86_parser.py',57),
  ('label -> ID','label',1,'p_label','x86_parser.py',62),
  ('line -> instr','line',1,'p_line_2','x86_parser.py',67),
  ('instr -> ID','instr',1,'p_instr_0','x86_parser.py',72),
  ('instr -> ID op','instr',2,'p_instr_1','x86_parser.py',77),
  ('instr -> ID op COMMA op','instr',4,'p_instr_2','x86_parser.py',82),
  ('instr -> ID op COMMA op COMMA op','instr',6,'p_instr_3','x86_parser.py',87),
  ('op -> immediate','op',1,'p_op','x86_parser.py',92),
  ('op -> register','op',1,'p_op','x86_parser.py',93),
  ('op -> address','op',1,'p_op','x86_parser.py',94),
  ('immediate -> DOLLAR INTEGER','immediate',2,'p_imm','x86_parser.py',100),
  ('immediate -> label','immediate',1,'p_imm','x86_parser.py',101),
  ('register -> PERCENT ID','register',2,'p_register','x86_parser.py',110),
  ('address -> immediate','address',1,'p_address_1','x86_parser.py',115),
  ('address -> address_offset LPAREN register address_index address_scale RPAREN','address',6,'p_address_2','x86_parser.py',120),
  ('empty -> <empty>','empty',0,'p_empty','x86_parser.py',125),
  ('address_offset -> empty','address_offset',1,'p_address_offset_1','x86_parser.py',130),
  ('address_offset -> label','address_offset',1,'p_address_offset_1','x86_parser.py',131),
  ('address_offset -> INTEGER','address_offset',1,'p_address_offset_2','x86_parser.py',137),
  ('address_index -> empty','address_index',1,'p_address_index','x86_parser.py',142),
  ('address_index -> COMMA register','address_index',2,'p_address_index','x86_parser.py',143),
  ('address_scale -> empty','address_scale',1,'p_address_scale','x86_parser.py',149),
  ('address_scale -> COMMA INTEGER','address_scale',2,'p_address_scale','x86_parser.py',150),
  ('address -> immediate LPAREN register RPAREN','address',4,'p_address_rip','x86_parser.py',156),
  ('line -> global','line',1,'p_line_3','x86_parser.py',162),
  ('global -> TYPE global_value','global',2,'p_global','x86_parser.py',167),
  ('global_value -> INTEGER','global_value',1,'p_global_value_1','x86_parser.py',172),
  ('global_value -> label','global_value',1,'p_global_value_2','x86_parser.py',177),
  ('global_value -> DQUOTE ID DQUOTE','global_value',3,'p_global_value_3','x86_parser.py',182),
]
